{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ProjetPFA\\\\ProjetPFA\\\\Components\\\\Search.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { getFilmsFromApiWithSearchedText } from \"../API/TMDBApi\";\nimport { Feather } from '@expo/vector-icons';\nimport SearchDropDown from \"./SearchDropDown\";\n\nvar Search = function (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  var _super = _createSuper(Search);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _super.call(this, props);\n    _this.searchedText = \"\";\n    _this.searching = false;\n    _this.state = {\n      films: []\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var onSearch = function onSearch(text) {\n        if (text) {\n          _this2.searchedText = text;\n          getFilmsFromApiWithSearchedText(_this2.searchedText).then(function (data) {\n            _this2.setState({\n              films: data.results\n            });\n          });\n          _this2.searching = true;\n        } else {\n          _this2.searching = false;\n        }\n      };\n\n      return React.createElement(View, {\n        style: styles.itemSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, React.createElement(Feather, {\n        name: \"search\",\n        style: styles.itemIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Chercher\",\n        onChangeText: onSearch,\n        platform: \"android\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }), this.searching && React.createElement(SearchDropDown, {\n        onPress: function onPress() {\n          return _this2.searching = false;\n        },\n        dataSource: this.state.films,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }\n      }));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  itemSearch: {\n    margin: 15,\n    borderColor: '#FFFFFF',\n    borderWidth: 1,\n    backgroundColor: '#FFFFFF',\n    height: 40,\n    borderRadius: 5,\n    flexDirection: 'row'\n  },\n  itemTexinput: {\n    backgroundColor: '#FFFFFF'\n  },\n  itemIcon: {\n    fontSize: 30,\n    color: \"#C0C0C0\",\n    alignSelf: 'center',\n    marginHorizontal: 15\n  },\n  itemMenu: {\n    margin: 2000,\n    borderColor: '#FFFFFF',\n    borderWidth: 1,\n    backgroundColor: '#FFFFFF',\n    height: 40,\n    borderRadius: 5,\n    flexDirection: 'row'\n  }\n});\nexport default Search;","map":{"version":3,"sources":["C:/Users/user/Desktop/ProjetPFA/ProjetPFA/Components/Search.js"],"names":["React","useState","getFilmsFromApiWithSearchedText","Feather","SearchDropDown","Search","props","searchedText","searching","state","films","onSearch","text","then","data","setState","results","styles","itemSearch","itemIcon","Component","StyleSheet","create","margin","borderColor","borderWidth","backgroundColor","height","borderRadius","flexDirection","itemTexinput","fontSize","color","alignSelf","marginHorizontal","itemMenu"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAEA,SAASC,+BAAT;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,cAAP;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,YAAL,GAAoB,EAApB;AACA,UAAKC,SAAL,GAAgB,KAAhB;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAJiB;AAOlB;;;;WACH,kBAAS;AAAA;;AAEL,UAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACzB,YAAIA,IAAJ,EAAU;AACR,UAAA,MAAI,CAACL,YAAL,GAAoBK,IAApB;AACAV,UAAAA,+BAA+B,CAAC,MAAI,CAACK,YAAN,CAA/B,CAAmDM,IAAnD,CAAwD,UAAAC,IAAI,EAAI;AAC9D,YAAA,MAAI,CAACC,QAAL,CAAc;AAAEL,cAAAA,KAAK,EAAEI,IAAI,CAACE;AAAd,aAAd;AACH,WAFC;AAGF,UAAA,MAAI,CAACR,SAAL,GAAgB,IAAhB;AACC,SAND,MAOK;AACH,UAAA,MAAI,CAACA,SAAL,GAAgB,KAAhB;AACD;AAEF,OAZD;;AAaA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAES,MAAM,CAACC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,QAAd;AAAwB,QAAA,KAAK,EAAED,MAAM,CAACE,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEM,oBAAC,SAAD;AACI,QAAA,WAAW,EAAC,UADhB;AAEI,QAAA,YAAY,EAAER,QAFlB;AAGI,QAAA,QAAQ,EAAC,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFN,EAQY,KAAKH,SAAL,IACA,oBAAC,cAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACA,SAAL,GAAe,KAArB;AAAA,SADX;AAEE,QAAA,UAAU,EAAE,KAAKC,KAAL,CAAWC,KAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATZ,CADF;AAmBC;;;;EA3CgBV,KAAK,CAACoB,S;;AA+C3B,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,UAAU,EAAE;AACVK,IAAAA,MAAM,EAAE,EADE;AAEVC,IAAAA,WAAW,EAAE,SAFH;AAGVC,IAAAA,WAAW,EAAE,CAHH;AAIVC,IAAAA,eAAe,EAAE,SAJP;AAMVC,IAAAA,MAAM,EAAC,EANG;AAOVC,IAAAA,YAAY,EAAE,CAPJ;AAQVC,IAAAA,aAAa,EAAE;AARL,GADmB;AAW/BC,EAAAA,YAAY,EAAC;AACXJ,IAAAA,eAAe,EAAE;AADN,GAXkB;AAe/BP,EAAAA,QAAQ,EAAC;AACPY,IAAAA,QAAQ,EAAC,EADF;AAEPC,IAAAA,KAAK,EAAC,SAFC;AAGPC,IAAAA,SAAS,EAAC,QAHH;AAIPC,IAAAA,gBAAgB,EAAC;AAJV,GAfsB;AAqB/BC,EAAAA,QAAQ,EAAE;AACRZ,IAAAA,MAAM,EAAE,IADA;AAERC,IAAAA,WAAW,EAAE,SAFL;AAGRC,IAAAA,WAAW,EAAE,CAHL;AAIRC,IAAAA,eAAe,EAAE,SAJT;AAKRC,IAAAA,MAAM,EAAC,EALC;AAMRC,IAAAA,YAAY,EAAE,CANN;AAORC,IAAAA,aAAa,EAAE;AAPP;AArBqB,CAAlB,CAAf;AAkCA,eAAgBxB,MAAhB","sourcesContent":["//import libraries we need to  create a component\r\nimport React, { useState } from 'react';\r\nimport { StyleSheet, View, TextInput,FlatList,Text,TouchableOpacity,Image} from 'react-native'\r\nimport { getFilmsFromApiWithSearchedText } from '../API/TMDBApi'\r\nimport { Feather } from '@expo/vector-icons'; \r\nimport SearchDropDown from './SearchDropDown'\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.searchedText = \"\" \r\n    this.searching= false\r\n    this.state = {\r\n      films: [],\r\n    }\r\n  }\r\nrender() {\r\n\r\n    const onSearch = (text) => {\r\n      if (text) {\r\n        this.searchedText = text \r\n        getFilmsFromApiWithSearchedText(this.searchedText).then(data => {\r\n          this.setState({ films: data.results })\r\n      })\r\n      this.searching= true\r\n      }\r\n      else {\r\n        this.searching= false\r\n      }\r\n  \r\n    }\r\n    return (\r\n      <View style={styles.itemSearch}>\r\n      <Feather name=\"search\"  style={styles.itemIcon}/>\r\n            <TextInput\r\n                placeholder=\"Chercher\"\r\n                onChangeText={onSearch}\r\n                platform=\"android\"\r\n              ></TextInput> \r\n                { \r\n                  this.searching&&\r\n                  <SearchDropDown\r\n                    onPress={() => this.searching=false}\r\n                    dataSource={this.state.films} />   \r\n                }  \r\n              \r\n     \r\n       </View>  \r\n       \r\n    )\r\n    }\r\n  } \r\n\r\n// create style to component\r\nconst styles = StyleSheet.create({\r\n  itemSearch: {\r\n    margin: 15,\r\n    borderColor: '#FFFFFF',\r\n    borderWidth: 1,\r\n    backgroundColor: '#FFFFFF',\r\n    \r\n    height:40,\r\n    borderRadius: 5,\r\n    flexDirection: 'row'\r\n  },\r\n  itemTexinput:{\r\n    backgroundColor: '#FFFFFF',\r\n  },\r\n\r\n  itemIcon:{\r\n    fontSize:30,\r\n    color:\"#C0C0C0\",\r\n    alignSelf:'center',\r\n    marginHorizontal:15\r\n  },\r\n  itemMenu: {\r\n    margin: 2000,\r\n    borderColor: '#FFFFFF',\r\n    borderWidth: 1,\r\n    backgroundColor: '#FFFFFF',\r\n    height:40,\r\n    borderRadius: 5,\r\n    flexDirection: 'row'\r\n  },\r\n  \r\n  });\r\n\r\n//Export to component so we can use it elsewhere in our project\r\nexport default  Search;"]},"metadata":{},"sourceType":"module"}