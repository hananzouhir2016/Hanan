{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ProjetPFA\\\\ProjetPFA\\\\Components\\\\Search.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { SearchBar } from 'react-native-elements';\nimport Affichage from \"./Affichage\";\nimport { getFilmsFromApiWithSearchedText } from \"../API/TMDBApi\";\n\nvar Search = function (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  var _super = _createSuper(Search);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _super.call(this, props);\n\n    searchedText: \"\";\n\n    _this.state = {\n      searching: false\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"_searchTextInputChanged\",\n    value: function _searchTextInputChanged(text) {\n      var _this2 = this;\n\n      this.setState({\n        searchedText: text\n      });\n      getFilmsFromApiWithSearchedText(this.state.searchedText).then(function (data) {\n        _this2.setState({\n          films: data.results\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var Searching = function Searching(text) {\n        setSearching(true);\n      };\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Type Here...\",\n        onChangeText: function onChangeText(text) {\n          return _this3._searchTextInputChanged(text);\n        },\n        onChangeText: function onChangeText(text) {\n          return _this3.seraching;\n        },\n        platform: \"android\",\n        style: styles.itemSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  itemSearch: {\n    margin: 15,\n    borderColor: '#FFFFFF',\n    borderWidth: 1,\n    backgroundColor: '#FFFFFF',\n    height: 40,\n    borderRadius: 5\n  }\n});\nexport default Search;","map":{"version":3,"sources":["C:/Users/user/Desktop/ProjetPFA/ProjetPFA/Components/Search.js"],"names":["React","useState","SearchBar","Affichage","getFilmsFromApiWithSearchedText","Search","props","searchedText","state","searching","text","setState","then","data","films","results","Searching","setSearching","_searchTextInputChanged","seraching","styles","itemSearch","Component","StyleSheet","create","margin","borderColor","borderWidth","backgroundColor","height","borderRadius"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAQC,SAAR;AACA,SAASC,+BAAT;;IAEMC,M;;;;;AAEJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AAGAC,IAAAA,YAAY,EAAE;;AACd,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AALiB;AAQlB;;;;WAOH,iCAAwBC,IAAxB,EAA8B;AAAA;;AAC5B,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,YAAY,EAAEG;AAAhB,OAAd;AAEAN,MAAAA,+BAA+B,CAAC,KAAKI,KAAL,CAAWD,YAAZ,CAA/B,CAAyDK,IAAzD,CAA8D,UAAAC,IAAI,EAAI;AAClE,QAAA,MAAI,CAACF,QAAL,CAAc;AAAEG,UAAAA,KAAK,EAAED,IAAI,CAACE;AAAd,SAAd;AACH,OAFD;AAID;;;WAGC,kBAAS;AAAA;;AAGP,UAAMC,SAAS,GAAE,SAAXA,SAAW,CAACN,IAAD,EACjB;AACEO,QAAAA,YAAY,CAAC,IAAD,CAAZ;AAED,OAJD;;AAKA,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA,oBAAC,SAAD;AACE,QAAA,WAAW,EAAC,cADd;AAEE,QAAA,YAAY,EAAE,sBAACP,IAAD;AAAA,iBAAU,MAAI,CAACQ,uBAAL,CAA6BR,IAA7B,CAAV;AAAA,SAFhB;AAGE,QAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,iBAAU,MAAI,CAACS,SAAf;AAAA,SAHhB;AAIE,QAAA,QAAQ,EAAC,SAJX;AAKE,QAAA,KAAK,EAAEC,MAAM,CAACC,UALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADF;AAYD;;;;EA/CkBrB,KAAK,CAACsB,S;;AAkD3B,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,UAAU,EAAE;AACVI,IAAAA,MAAM,EAAE,EADE;AAEVC,IAAAA,WAAW,EAAE,SAFH;AAGVC,IAAAA,WAAW,EAAE,CAHH;AAIVC,IAAAA,eAAe,EAAE,SAJP;AAKVC,IAAAA,MAAM,EAAC,EALG;AAMVC,IAAAA,YAAY,EAAE;AANJ;AADmB,CAAlB,CAAf;AAWA,eAAgBzB,MAAhB","sourcesContent":["//import libraries we need to  create a component\r\nimport React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, FlatList,TextInput} from 'react-native'\r\nimport { SearchBar } from 'react-native-elements';\r\nimport  Affichage from './Affichage'\r\nimport { getFilmsFromApiWithSearchedText } from '../API/TMDBApi'\r\n\r\nclass Search extends React.Component {\r\n  //Pour afficher les films de l'API, il faut déjà les stocker dans une propriété de notre component\r\n  constructor(props) {\r\n    super(props)\r\n    // Ici on va créer les propriétés de notre component custom Search\r\n    //this.state = { films: [] }\r\n    searchedText: \"\"\r\n    this.state = {\r\n      searching: false\r\n    };\r\n  }\r\n \r\n  \r\n\r\n  // Components/Search.js\r\n\r\n\r\n_searchTextInputChanged(text) {\r\n  this.setState({ searchedText: text })\r\n// Seulement si le texte recherché n'est pas vide\r\n  getFilmsFromApiWithSearchedText(this.state.searchedText).then(data => {\r\n      this.setState({ films: data.results })\r\n  })\r\n\r\n}\r\n\r\n\r\n  render() {\r\n    \r\n\r\n    const Searching =(text)=>\r\n    {\r\n      setSearching(true)\r\n    \r\n    }\r\n    return (\r\n      <View>\r\n      \r\n      <TextInput\r\n        placeholder=\"Type Here...\"\r\n        onChangeText={(text) => this._searchTextInputChanged(text)}\r\n        onChangeText={(text) => this.seraching}\r\n        platform=\"android\" \r\n        style={styles.itemSearch}\r\n       />\r\n      </View>\r\n    )\r\n  }\r\n}\r\n// create style to component\r\nconst styles = StyleSheet.create({\r\n  itemSearch: {\r\n    margin: 15,\r\n    borderColor: '#FFFFFF',\r\n    borderWidth: 1,\r\n    backgroundColor: '#FFFFFF',\r\n    height:40,\r\n    borderRadius: 5\r\n  }\r\n  });\r\n//Export to component so we can use it elsewhere in our project\r\nexport default  Search;"]},"metadata":{},"sourceType":"module"}