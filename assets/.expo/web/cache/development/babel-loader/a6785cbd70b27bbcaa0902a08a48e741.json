{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ProjetPFA\\\\ProjetPFA\\\\Components\\\\Search.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { getFilmsFromApiWithSearchedText } from \"../API/TMDBApi\";\nimport { Feather } from '@expo/vector-icons';\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport { MenuContext, Menu, MenuOptions, MenuOption, MenuTrigger } from 'react-native-popup-menu';\n\nvar Search = function (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  var _super = _createSuper(Search);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      films: [],\n      searchedText: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"_searchTextInputChanged\",\n    value: function _searchTextInputChanged(text) {\n      var _this2 = this;\n\n      this.setState({\n        searchedText: text\n      });\n      getFilmsFromApiWithSearchedText(this.state.searchedText).then(function (data) {\n        _this2.setState({\n          films: data.results\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var Searching = function Searching(text) {\n        setSearching(true);\n      };\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.itemSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, React.createElement(Feather, {\n        name: \"search\",\n        style: styles.itemIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Chercher\",\n        onChangeText: function onChangeText(text) {\n          return _this3._searchTextInputChanged(text);\n        },\n        platform: \"android\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 8\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.films,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(Text, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 35\n            }\n          }, item.title);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      })), React.createElement(MenuContext, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 1\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, React.createElement(Menu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, React.createElement(MenuTrigger, {\n        text: \"Open menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }), React.createElement(MenuOptions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, React.createElement(MenuOption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, this.state.films.title)))))));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  itemSearch: {\n    margin: 15,\n    borderColor: '#FFFFFF',\n    borderWidth: 1,\n    backgroundColor: '#FFFFFF',\n    height: 40,\n    borderRadius: 5,\n    flexDirection: 'row'\n  },\n  itemTexinput: {\n    backgroundColor: '#FFFFFF'\n  },\n  itemIcon: {\n    fontSize: 30,\n    color: \"#C0C0C0\",\n    alignSelf: 'center',\n    marginHorizontal: 15\n  }\n});\nexport default Search;","map":{"version":3,"sources":["C:/Users/user/Desktop/ProjetPFA/ProjetPFA/Components/Search.js"],"names":["React","getFilmsFromApiWithSearchedText","Feather","DropDownPicker","MenuContext","Menu","MenuOptions","MenuOption","MenuTrigger","Search","props","state","films","searchedText","text","setState","then","data","results","Searching","setSearching","styles","itemSearch","itemIcon","_searchTextInputChanged","item","id","toString","title","Component","StyleSheet","create","margin","borderColor","borderWidth","backgroundColor","height","borderRadius","flexDirection","itemTexinput","fontSize","color","alignSelf","marginHorizontal"],"mappings":"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","sourcesContent":["//import libraries we need to  create a component\r\nimport React from 'react';\r\nimport { StyleSheet, View, TextInput,FlatList,Text} from 'react-native'\r\nimport { getFilmsFromApiWithSearchedText } from '../API/TMDBApi'\r\nimport { Feather } from '@expo/vector-icons'; \r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport {MenuContext,Menu,MenuOptions,MenuOption,MenuTrigger} from 'react-native-popup-menu';\r\n\r\nclass Search extends React.Component {\r\n  //Pour afficher les films de l'API, il faut déjà les stocker dans une propriété de notre component\r\n  constructor(props) {\r\n    super(props)\r\n    // Ici on va créer les propriétés de notre component custom Search\r\n    //this.state = { films: [] }\r\n    this.state = {\r\n      films: [],\r\n      searchedText: \"\" // Initialisation de notre donnée searchedText dans le state\r\n    }\r\n  }\r\n \r\n  \r\n\r\n  // Components/Search.js\r\n\r\n\r\n_searchTextInputChanged(text) {\r\n  this.setState({ searchedText: text })\r\n// Seulement si le texte recherché n'est pas vide\r\n  getFilmsFromApiWithSearchedText(this.state.searchedText).then(data => {\r\n      this.setState({ films: data.results })\r\n  })\r\n\r\n}\r\n\r\n\r\n  render() {\r\n  \r\n    const Searching =(text)=>\r\n    {\r\n      setSearching(true)\r\n    \r\n    }\r\n  \r\n    return (\r\n      <View >\r\n      <View style={styles.itemSearch}>\r\n\r\n      <Feather name=\"search\"  style={styles.itemIcon}/>\r\n      <TextInput\r\n        placeholder=\"Chercher\"\r\n        onChangeText={(text) => this._searchTextInputChanged(text)}\r\n        platform=\"android\" \r\n       />\r\n       </View>\r\n       <View>\r\n        <FlatList\r\n          data={this.state.films}\r\n          keyExtractor={(item) => item.id.toString()}\r\n          renderItem={({item}) => <Text>{item.title}</Text>}\r\n        />\r\n        </View>\r\n<MenuContext >\r\n        <View>\r\n          <Menu>\r\n            <MenuTrigger text=\"Open menu\" />\r\n\r\n            <MenuOptions>\r\n             \r\n              <MenuOption >\r\n                <Text>{this.state.films.title}</Text>\r\n              </MenuOption>\r\n            \r\n            </MenuOptions>\r\n          </Menu>\r\n        </View>\r\n      </MenuContext>\r\n\r\n      </View>\r\n      \r\n    )\r\n  }\r\n}\r\n// create style to component\r\nconst styles = StyleSheet.create({\r\n  itemSearch: {\r\n    margin: 15,\r\n    borderColor: '#FFFFFF',\r\n    borderWidth: 1,\r\n    backgroundColor: '#FFFFFF',\r\n    height:40,\r\n    borderRadius: 5,\r\n    flexDirection: 'row'\r\n  },\r\n  itemTexinput:{\r\n    backgroundColor: '#FFFFFF',\r\n  },\r\n\r\n  itemIcon:{\r\n    fontSize:30,\r\n    color:\"#C0C0C0\",\r\n    alignSelf:'center',\r\n    marginHorizontal:15\r\n  }\r\n  });\r\n//Export to component so we can use it elsewhere in our project\r\nexport default  Search;"]},"metadata":{},"sourceType":"module"}