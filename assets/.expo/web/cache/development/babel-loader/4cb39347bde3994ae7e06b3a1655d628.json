{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ProjetPFA\\\\ProjetPFA\\\\App.js\";\nimport React, { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SearchDropDown from \"../ProjetPFA/Components/SearchDropDown\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(['apple', 'banana', 'cow', 'dex', 'zee', 'orange', 'air', 'bottle']),\n      _useState2 = _slicedToArray(_useState, 1),\n      dataSource = _useState2[0];\n\n  var _useState3 = useState(['#84DCC6', '#FEC8C8', '#F7E4CF', \"#E8DEF3\"]),\n      _useState4 = _slicedToArray(_useState3, 1),\n      colors = _useState4[0];\n\n  var _useState5 = useState(dataSource),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filtered = _useState6[0],\n      setFiltered = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      searching = _useState8[0],\n      setSearching = _useState8[1];\n\n  var onSearch = function onSearch(text) {\n    if (text) {\n      setSearching(true);\n      var temp = text.toLowerCase();\n      var tempList = dataSource.filter(function (item) {\n        if (item.match(temp)) return item;\n      });\n      setFiltered(tempList);\n    } else {\n      setSearching(false);\n      setFiltered(dataSource);\n    }\n  };\n\n  var randomColor = function randomColor() {\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Search\",\n    placeholderTextColor: \"white\",\n    onChangeText: onSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      marginTop: 20,\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \" List of data\"), React.createElement(View, {\n    style: {\n      flexWrap: 'wrap',\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, dataSource.map(function (item, index) {\n    return React.createElement(View, {\n      style: {\n        margin: 10,\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: 80,\n        width: 80,\n        backgroundColor: randomColor()\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, item));\n  }))), searching && React.createElement(SearchDropDown, {\n    onPress: function onPress() {\n      return setSearching(false);\n    },\n    dataSource: filtered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    marginTop: '20%',\n    flex: 1\n  },\n  textInput: {\n    backgroundColor: '#BFBFBF',\n    width: '80%',\n    borderRadius: 5,\n    height: 50,\n    fontSize: 20,\n    fontWeight: 'bold',\n    paddingHorizontal: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/user/Desktop/ProjetPFA/ProjetPFA/App.js"],"names":["React","useState","SearchDropDown","App","dataSource","colors","filtered","setFiltered","searching","setSearching","onSearch","text","temp","toLowerCase","tempList","filter","item","match","randomColor","Math","floor","random","length","styles","container","textInput","justifyContent","alignContent","alignItems","fontSize","marginTop","marginBottom","flexWrap","flexDirection","map","index","margin","height","width","backgroundColor","StyleSheet","create","flex","borderRadius","fontWeight","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  SafeAreaView,\n  StyleSheet,\n  ScrollView,\n  View,\n  Text,\n  TextInput,\n} from 'react-native';\nimport SearchDropDown from '../ProjetPFA/Components/SearchDropDown'\nexport default function App() {\n  const [dataSource] = useState(['apple', 'banana', 'cow', 'dex', 'zee', 'orange', 'air', 'bottle'])\n  const [colors] = useState(['#84DCC6', '#FEC8C8', '#F7E4CF', \"#E8DEF3\",\n  ])\n  const [filtered, setFiltered] = useState(dataSource)\n  const [searching, setSearching] = useState(false)\n  const onSearch = (text) => {\n    if (text) {\n      setSearching(true)\n      const temp = text.toLowerCase()\n\n      const tempList = dataSource.filter(item => {\n        if (item.match(temp))\n          return item\n      })\n      setFiltered(tempList)\n    }\n    else {\n      setSearching(false)\n      setFiltered(dataSource)\n    }\n\n  }\n  const randomColor = () => {\n    return colors[Math.floor(Math.random() * colors.length)]\n  }\n  return (\n    <View style={styles.container}>\n\n      <TextInput\n        style={styles.textInput}\n        placeholder=\"Search\"\n        placeholderTextColor='white'\n        onChangeText={onSearch}\n\n      />\n      <View style={{ justifyContent: 'center', alignContent: 'center', alignItems: 'center' }}>\n        <Text style={{ fontSize: 20, marginTop: 20, marginBottom: 20, }}> List of data</Text>\n        <View style={{\n          flexWrap: 'wrap', flexDirection: 'row',\n          justifyContent: 'center'\n\n        }}>\n          {\n            dataSource.map((item, index) => {\n              return (\n                <View style={{\n                  margin: 10,\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  height: 80, width: 80, backgroundColor: randomColor()\n                }}>\n                  <Text style={{ fontSize: 15, }}>\n                    {item}\n                  </Text>\n                </View>\n              )\n            })\n          }\n        </View>\n\n      </View>\n\n      {/* your components can stay here like anything */}\n      {/* and at the end of view */}\n      {\n        searching &&\n        <SearchDropDown\n          onPress={() => setSearching(false)}\n          dataSource={filtered} />\n      }\n    </View>\n  )\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    // justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '20%',\n    flex: 1\n  },\n  textInput: {\n    backgroundColor: '#BFBFBF',\n    width: '80%',\n    borderRadius: 5,\n    height: 50,\n    fontSize: 20,\n    fontWeight: 'bold',\n    paddingHorizontal: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}