{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ProjetPFA\\\\ProjetPFA\\\\Components\\\\Search.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { SearchBar } from 'react-native-elements';\nimport Affichage from \"./Affichage\";\nimport { getFilmsFromApiWithSearchedText } from \"../API/TMDBApi\";\n\nvar Search = function (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  var _super = _createSuper(Search);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      films: []\n    };\n\n    searchedText: \"\";\n\n    _this.state = {\n      searching: false\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"_searchTextInputChanged\",\n    value: function _searchTextInputChanged(text) {\n      var _this2 = this;\n\n      this.setState({\n        searchedText: text\n      });\n      getFilmsFromApiWithSearchedText(this.state.searchedText).then(function (data) {\n        _this2.setState({\n          films: data.results\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var search = this.state.search;\n\n      var seraching = function seraching(text) {\n        setSearching(true);\n      };\n\n      return React.createElement(View, {\n        style: styles.main_container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, React.createElement(SearchBar, {\n        placeholder: \"Type Here...\",\n        onChangeText: function onChangeText(text) {\n          return _this3._searchTextInputChanged(text);\n        },\n        onChangeText: function onChangeText(text) {\n          return _this3.seraching;\n        },\n        containerStyle: {\n          backgroundColor: '#228B22'\n        },\n        inputStyle: {\n          backgroundColor: '#228B22'\n        },\n        platform: \"android\",\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 10\n        }\n      }), React.createElement(SearchBar, {\n        placeholder: \"Type Here...\",\n        onChangeText: function onChangeText(text) {\n          return _this3.seraching;\n        },\n        containerStyle: {\n          backgroundColor: '#228B22'\n        },\n        inputStyle: {\n          backgroundColor: '#228B22'\n        },\n        platform: \"android\",\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 10\n        }\n      }), searching && React.createElement(Affichage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  main_container: {\n    flex: 1,\n    marginTop: 60\n  },\n  container: {\n    width: 35\n  },\n  textinput: {\n    height: 40,\n    borderColor: '#000000',\n    borderWidth: 1,\n    width: 350\n  }\n});\nexport default Search;","map":{"version":3,"sources":["C:/Users/user/Desktop/ProjetPFA/ProjetPFA/Components/Search.js"],"names":["React","useState","SearchBar","Affichage","getFilmsFromApiWithSearchedText","Search","props","state","films","searchedText","searching","text","setState","then","data","results","search","seraching","setSearching","styles","main_container","_searchTextInputChanged","backgroundColor","container","Component","StyleSheet","create","flex","marginTop","width","textinput","height","borderColor","borderWidth"],"mappings":"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","sourcesContent":["//import libraries we need to  create a component\r\nimport React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, FlatList,TextInput} from 'react-native'\r\nimport { SearchBar } from 'react-native-elements';\r\nimport  Affichage from './Affichage'\r\nimport { getFilmsFromApiWithSearchedText } from '../API/TMDBApi'\r\n\r\nclass Search extends React.Component {\r\n  //Pour afficher les films de l'API, il faut déjà les stocker dans une propriété de notre component\r\n  constructor(props) {\r\n    super(props)\r\n    // Ici on va créer les propriétés de notre component custom Search\r\n    this.state = { films: [] }\r\n    searchedText: \"\"\r\n    this.state = {\r\n      searching: false\r\n    };\r\n  }\r\n \r\n  \r\n\r\n  // Components/Search.js\r\n\r\n\r\n_searchTextInputChanged(text) {\r\n  this.setState({ searchedText: text })\r\n// Seulement si le texte recherché n'est pas vide\r\n  getFilmsFromApiWithSearchedText(this.state.searchedText).then(data => {\r\n      this.setState({ films: data.results })\r\n  })\r\n\r\n}\r\n\r\n\r\n  render() {\r\n    const { search } = this.state;\r\n\r\n    const seraching =(text)=>\r\n    {\r\n      setSearching(true)\r\n    \r\n    }\r\n    return (\r\n      <View style={styles.main_container}>\r\n      \r\n         <SearchBar\r\n        placeholder=\"Type Here...\"\r\n        onChangeText={(text) => this._searchTextInputChanged(text)}\r\n        onChangeText={(text) => this.seraching}\r\n        containerStyle={{backgroundColor: '#228B22'}}\r\n        inputStyle={{backgroundColor: '#228B22'}}\r\n        platform=\"android\" \r\n        style={styles.container}\r\n       />\r\n         <SearchBar\r\n        placeholder=\"Type Here...\"\r\n        //onChangeText={(text) => this._searchTextInputChanged(text)}\r\n        onChangeText={(text) => this.seraching}\r\n        containerStyle={{backgroundColor: '#228B22'}}\r\n        inputStyle={{backgroundColor: '#228B22'}}\r\n        platform=\"android\" \r\n        style={styles.container}\r\n       />\r\n        \r\n        \r\n\r\n{\r\n  searching &&\r\n      <Affichage/>\r\n  }\r\n      </View>\r\n    )\r\n  }\r\n}\r\n// create style to component\r\nconst styles = StyleSheet.create({\r\n  main_container: {\r\n    flex: 1,\r\n    marginTop: 60\r\n  },\r\n  container: {\r\n    width:35\r\n  },\r\n  textinput: {\r\n    height: 40,\r\n    borderColor: '#000000',\r\n    borderWidth: 1,\r\n    width:350\r\n  \r\n  }\r\n  });\r\n//Export to component so we can use it elsewhere in our project\r\nexport default  Search;"]},"metadata":{},"sourceType":"module"}