{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ProjetPFA\\\\ProjetPFA\\\\Components\\\\Search.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport films from \"../Films/films\";\nimport { getFilmsFromApiWithSearchedText } from \"../API/TMDBApi\";\n\nvar Search = function (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  var _super = _createSuper(Search);\n\n  function Search(props) {\n    _classCallCheck(this, Search);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Search, [{\n    key: \"_loadFilms\",\n    value: function _loadFilms() {\n      getFilmsFromApiWithSearchedText(\"star\").then(function (data) {\n        return console.log(data);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.main_container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textinput,\n        placeholder: \"Titre du film\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Rechercher\",\n        onPress: function onPress() {\n          return _this._loadFilms();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  main_container: {\n    flex: 1,\n    marginTop: 60\n  },\n  textinput: {\n    height: 40,\n    borderColor: '#000000',\n    borderWidth: 1,\n    width: 350\n  }\n});\nexport default Search;","map":{"version":3,"sources":["C:/Users/user/Desktop/ProjetPFA/ProjetPFA/Components/Search.js"],"names":["React","films","getFilmsFromApiWithSearchedText","Search","props","then","data","console","log","styles","main_container","textinput","_loadFilms","Component","StyleSheet","create","flex","marginTop","height","borderColor","borderWidth","width"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAEA,OAAOC,KAAP;AACA,SAASC,+BAAT;;IAEMC,M;;;;;AAEJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACXA,KADW;AAGlB;;;;WAIH,sBAAa;AACXF,MAAAA,+BAA+B,CAAC,MAAD,CAA/B,CAAwCG,IAAxC,CAA6C,UAAAC,IAAI;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAJ;AAAA,OAAjD;AACD;;;WAEC,kBAAS;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,MAAM,CAACC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAED,MAAM,CAACE,SAAzB;AAAoC,QAAA,WAAW,EAAC,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,YAAd;AAA2B,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACC,UAAL,EAAN;AAAA,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAOD;;;;EArBkBZ,KAAK,CAACa,S;;AAwB3B,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,cAAc,EAAE;AACdM,IAAAA,IAAI,EAAE,CADQ;AAEdC,IAAAA,SAAS,EAAE;AAFG,GADe;AAK/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,WAAW,EAAE,SAFJ;AAGTC,IAAAA,WAAW,EAAE,CAHJ;AAITC,IAAAA,KAAK,EAAC;AAJG;AALoB,CAAlB,CAAf;AAaA,eAAgBlB,MAAhB","sourcesContent":["//import libraries we need to  create a component\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, FlatList, Button,TextInput } from 'react-native'\r\nimport films from '../Films/films'\r\nimport { getFilmsFromApiWithSearchedText } from '../API/TMDBApi'\r\n//create component function  that return some 'jsx' like html  or use const component=function(){};\r\nclass Search extends React.Component {\r\n  //Pour afficher les films de l'API, il faut déjà les stocker dans une propriété de notre component\r\n  constructor(props) {\r\n    super(props)\r\n    // Ici on va créer les propriétés de notre component custom Search\r\n  }\r\n\r\n  // Components/Search.js\r\n\r\n_loadFilms() {\r\n  getFilmsFromApiWithSearchedText(\"star\").then(data => console.log(data));\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.main_container}>\r\n        <TextInput style={styles.textinput} placeholder='Titre du film'/>\r\n        <Button title='Rechercher' onPress={() => this._loadFilms()}/>\r\n        \r\n      </View>\r\n    )\r\n  }\r\n}\r\n// create style to component\r\nconst styles = StyleSheet.create({\r\n  main_container: {\r\n    flex: 1,\r\n    marginTop: 60\r\n  },\r\n  textinput: {\r\n    height: 40,\r\n    borderColor: '#000000',\r\n    borderWidth: 1,\r\n    width:350\r\n  }\r\n  });\r\n//Export to component so we can use it elsewhere in our project\r\nexport default  Search;"]},"metadata":{},"sourceType":"module"}