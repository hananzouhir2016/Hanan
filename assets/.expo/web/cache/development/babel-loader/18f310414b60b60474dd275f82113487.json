{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ProjetPFA\\\\ProjetPFA\\\\node_modules\\\\react-native-option-select\\\\lib\\\\select.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Option = require(\"./option\");\n\nimport React, { Component } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nvar window = Dimensions.get('window');\nvar SELECT = 'SELECT';\nvar styles = StyleSheet.create({\n  container: {}\n});\n\nvar Select = function (_Component) {\n  _inherits(Select, _Component);\n\n  var _super = _createSuper(Select);\n\n  function Select(props) {\n    var _this;\n\n    _classCallCheck(this, Select);\n\n    _this = _super.call(this, props);\n    var defaultValue = props.defaultValue;\n\n    if (!defaultValue) {\n      if (Array.isArray(props.children)) {\n        defaultValue = props.children[0].props.children;\n      } else {\n        defaultValue = props.children.props.children;\n      }\n    }\n\n    _this.state = {\n      value: defaultValue\n    };\n    return _this;\n  }\n\n  _createClass(Select, [{\n    key: \"reset\",\n    value: function reset() {\n      var defaultValue = this.props.defaultValue;\n      this.setState({\n        value: defaultValue\n      });\n    }\n  }, {\n    key: \"_onPress\",\n    value: function _onPress() {\n      var _this$props = this.props,\n          optionListRef = _this$props.optionListRef,\n          children = _this$props.children,\n          onSelect = _this$props.onSelect,\n          width = _this$props.width,\n          height = _this$props.height;\n\n      if (!children.length) {\n        return false;\n      }\n\n      var handle = findNodeHandle(this);\n      var that = this;\n      NativeModules.UIManager.measure(handle, function (x, y, width, height, pageX, pageY) {\n        optionListRef()._show(children, pageX, pageY + height, width, height, function (item) {\n          var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : item;\n\n          if (item) {\n            onSelect(value);\n            that.setState({\n              value: item\n            });\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          width = _this$props2.width,\n          height = _this$props2.height,\n          children = _this$props2.children,\n          defaultValue = _this$props2.defaultValue,\n          style = _this$props2.style,\n          styleOption = _this$props2.styleOption,\n          styleText = _this$props2.styleText;\n      var dimensions = {\n        width: width,\n        height: height\n      };\n      return React.createElement(TouchableWithoutFeedback, {\n        onPress: this._onPress.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        ref: SELECT,\n        style: [styles.container, dimensions, style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, React.createElement(Option, {\n        style: styleOption,\n        styleText: styleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, this.state.value)));\n    }\n  }]);\n\n  return Select;\n}(Component);\n\nSelect.propTypes = {\n  width: React.PropTypes.number,\n  height: React.PropTypes.number,\n  optionListRef: React.PropTypes.func.isRequired,\n  onSelect: React.PropTypes.func\n};\nSelect.defaultProps = {\n  onSelect: function onSelect() {}\n};\nmodule.exports = Select;","map":{"version":3,"sources":["C:/Users/user/Desktop/ProjetPFA/ProjetPFA/node_modules/react-native-option-select/lib/select.js"],"names":["Option","require","React","Component","window","Dimensions","get","SELECT","styles","StyleSheet","create","container","Select","props","defaultValue","Array","isArray","children","state","value","setState","optionListRef","onSelect","width","height","length","handle","findNodeHandle","that","NativeModules","UIManager","measure","x","y","pageX","pageY","_show","item","style","styleOption","styleText","dimensions","_onPress","bind","propTypes","PropTypes","number","func","isRequired","defaultProps","module","exports"],"mappings":"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","sourcesContent":["const Option = require('./option');\n\nimport React, { Component } from 'react';\nimport {\n  Dimensions,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  NativeModules,\n  findNodeHandle\n} from 'react-native';\n\nconst window = Dimensions.get('window');\n\nconst SELECT = 'SELECT';\n\nconst styles = StyleSheet.create({\n  container: {\n    // borderColor: '#BDBDC1',\n    // borderWidth: 2 / window.scale\n  }\n});\n\nclass Select extends Component {\n  constructor(props) {\n    super(props);\n\n    let defaultValue = props.defaultValue;\n\n    if (!defaultValue) {\n      if (Array.isArray(props.children)) {\n        defaultValue = props.children[0].props.children;\n      } else {\n        defaultValue = props.children.props.children;\n      }\n    }\n\n    this.state = {\n      value: defaultValue\n    }\n  }\n\n  reset() {\n    let { defaultValue } = this.props;\n    this.setState({ value: defaultValue });\n  }\n\n  _onPress() {\n    let { optionListRef, children, onSelect, width, height } = this.props;\n    if (!children.length) {\n      return false;\n    }\n    let handle = findNodeHandle(this)\n    let that = this;\n    NativeModules.UIManager.measure(handle, (x, y, width, height, pageX, pageY) => {\n        optionListRef()._show(children, pageX, pageY + height, width, height, (item, value=item) => {\n          if (item) {\n            onSelect(value);\n            that.setState({\n              value: item\n            });\n          }\n        });\n    });\n  }\n\n  render() {\n    let { width, height, children, defaultValue, style, styleOption, styleText } = this.props;\n    let dimensions = { width, height };\n\n    return (\n      <TouchableWithoutFeedback onPress={this._onPress.bind(this)}>\n        <View ref={SELECT} style={[styles.container, dimensions, style ]}>\n          <Option style={ styleOption } styleText={ styleText }>{this.state.value}</Option>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nSelect.propTypes = {\n  width: React.PropTypes.number,\n  height: React.PropTypes.number,\n  optionListRef: React.PropTypes.func.isRequired,\n  onSelect: React.PropTypes.func\n};\n\nSelect.defaultProps = {\n  onSelect: () => { }\n};\n\nmodule.exports = Select;\n"]},"metadata":{},"sourceType":"module"}