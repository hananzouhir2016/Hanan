{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ProjetPFA\\\\ProjetPFA\\\\Components\\\\Search.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { getFilmsFromApiWithSearchedText } from \"../API/TMDBApi\";\n\nvar Search = function (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  var _super = _createSuper(Search);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      films: []\n    };\n\n    searchedText: \"\";\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"_searchTextInputChanged\",\n    value: function _searchTextInputChanged(text) {\n      var _this2 = this;\n\n      this.setState({\n        searchedText: text\n      });\n      getFilmsFromApiWithSearchedText(this.state.searchedText).then(function (data) {\n        _this2.setState({\n          films: data.results\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.main_container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        onChangeText: function onChangeText(text) {\n          return _this3._searchTextInputChanged(text);\n        },\n        style: styles.textinput,\n        placeholder: \"Titre du film\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }), React.createElement(FlatList, {\n        data: this.state.films,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(Text, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 38\n            }\n          }, item.title);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  main_container: {\n    flex: 1,\n    marginTop: 60\n  },\n  textinput: {\n    height: 40,\n    borderColor: '#000000',\n    borderWidth: 1,\n    width: 350\n  }\n});\nexport default Search;","map":{"version":3,"sources":["C:/Users/user/Desktop/ProjetPFA/ProjetPFA/Components/Search.js"],"names":["React","getFilmsFromApiWithSearchedText","Search","props","state","films","searchedText","text","setState","then","data","results","styles","main_container","_searchTextInputChanged","textinput","item","id","toString","title","Component","StyleSheet","create","flex","marginTop","height","borderColor","borderWidth","width"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAIA,SAASC,+BAAT;;IAEMC,M;;;;;AAEJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;;AACAC,IAAAA,YAAY,EAAE;;AAJG;AAKlB;;;;WAMH,iCAAwBC,IAAxB,EAA8B;AAAA;;AAC5B,WAAKC,QAAL,CAAc;AAAEF,QAAAA,YAAY,EAAEC;AAAhB,OAAd;AAEAN,MAAAA,+BAA+B,CAAC,KAAKG,KAAL,CAAWE,YAAZ,CAA/B,CAAyDG,IAAzD,CAA8D,UAAAC,IAAI,EAAI;AAClE,QAAA,MAAI,CAACF,QAAL,CAAc;AAAEH,UAAAA,KAAK,EAAEK,IAAI,CAACC;AAAd,SAAd;AACH,OAFD;AAID;;;WACC,kBAAS;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAY,QAAA,YAAY,EAAE,sBAACN,IAAD;AAAA,iBAAS,MAAI,CAACO,uBAAL,CAA6BP,IAA7B,CAAT;AAAA,SAA1B;AAAsE,QAAA,KAAK,EAAEK,MAAM,CAACG,SAApF;AAA+F,QAAA,WAAW,EAAC,eAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE,oBAAC,QAAD;AACK,QAAA,IAAI,EAAE,KAAKX,KAAL,CAAWC,KADtB;AAEK,QAAA,YAAY,EAAE,sBAACW,IAAD;AAAA,iBAAUA,IAAI,CAACC,EAAL,CAAQC,QAAR,EAAV;AAAA,SAFnB;AAGK,QAAA,UAAU,EAAE;AAAA,cAAEF,IAAF,QAAEA,IAAF;AAAA,iBAAY,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOA,IAAI,CAACG,KAAZ,CAAZ;AAAA,SAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAYD;;;;EAlCkBnB,KAAK,CAACoB,S;;AAqC3B,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,cAAc,EAAE;AACdU,IAAAA,IAAI,EAAE,CADQ;AAEdC,IAAAA,SAAS,EAAE;AAFG,GADe;AAK/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,WAAW,EAAE,SAFJ;AAGTC,IAAAA,WAAW,EAAE,CAHJ;AAITC,IAAAA,KAAK,EAAC;AAJG;AALoB,CAAlB,CAAf;AAaA,eAAgB1B,MAAhB","sourcesContent":["//import libraries we need to  create a component\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, FlatList,TextInput} from 'react-native'\r\n\r\n\r\nimport { getFilmsFromApiWithSearchedText } from '../API/TMDBApi'\r\n\r\nclass Search extends React.Component {\r\n  //Pour afficher les films de l'API, il faut déjà les stocker dans une propriété de notre component\r\n  constructor(props) {\r\n    super(props)\r\n    // Ici on va créer les propriétés de notre component custom Search\r\n    this.state = { films: [] }\r\n    searchedText: \"\"\r\n  }\r\n \r\n\r\n  // Components/Search.js\r\n\r\n\r\n_searchTextInputChanged(text) {\r\n  this.setState({ searchedText: text })\r\n// Seulement si le texte recherché n'est pas vide\r\n  getFilmsFromApiWithSearchedText(this.state.searchedText).then(data => {\r\n      this.setState({ films: data.results })\r\n  })\r\n\r\n}\r\n  render() {\r\n    return (\r\n      <View style={styles.main_container}>\r\n        <TextInput  onChangeText={(text) =>this._searchTextInputChanged(text)}style={styles.textinput} placeholder='Titre du film' />\r\n      \r\n        <FlatList\r\n             data={this.state.films}\r\n             keyExtractor={(item) => item.id.toString()}\r\n             renderItem={({item}) => <Text>{item.title}</Text>}\r\n        />\r\n        \r\n      </View>\r\n    )\r\n  }\r\n}\r\n// create style to component\r\nconst styles = StyleSheet.create({\r\n  main_container: {\r\n    flex: 1,\r\n    marginTop: 60\r\n  },\r\n  textinput: {\r\n    height: 40,\r\n    borderColor: '#000000',\r\n    borderWidth: 1,\r\n    width:350\r\n  }\r\n  });\r\n//Export to component so we can use it elsewhere in our project\r\nexport default  Search;"]},"metadata":{},"sourceType":"module"}